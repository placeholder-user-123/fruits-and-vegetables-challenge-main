<?php

namespace ContainerGa1OPWC;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getProduceControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\ProduceController' shared autowired service.
     *
     * @return \App\Controller\ProduceController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/src/Controller/ProduceController.php';
        include_once \dirname(__DIR__, 4).'/src/Service/ProduceService.php';
        include_once \dirname(__DIR__, 4).'/src/Service/ProduceServiceFactory.php';

        $container->services['App\\Controller\\ProduceController'] = $instance = new \App\Controller\ProduceController(new \App\Service\ProduceService(new \App\Service\ProduceServiceFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'fruit' => ['privates', 'App\\Repository\\FruitRepository', 'getFruitRepositoryService', true],
            'vegetable' => ['privates', 'App\\Repository\\VegetableRepository', 'getVegetableRepositoryService', true],
        ], [
            'fruit' => '?',
            'vegetable' => '?',
        ]))));

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
        ]))->withContext('App\\Controller\\ProduceController', $container));

        return $instance;
    }
}
